{"version":3,"sources":["language-context.js","logo.svg","App.js","reportWebVitals.js","index.js"],"names":["languageValue","localStorage","getItem","LanguageContext","React","createContext","Context","props","changeValue","event","setItem","target","value","this","setState","state","bind","Provider","changeState","children","Component","LanguageConsumer","Consumer","FirstPage","lazy","App","fallback","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMACMA,EAAgBC,aAAaC,QAAQ,YAErCC,EAAkBC,IAAMC,gBACrBC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAMVC,YAAc,SAASC,GAClBR,aAAaS,QAAQ,WAAYD,EAAME,OAAOC,OAC/CC,KAAKC,SAAS,CAACF,MAAOH,EAAME,OAAOC,SAPnC,EAAKG,MAAQ,CACTH,MAAOZ,GAAgC,MAE3C,EAAKQ,YAAc,EAAKA,YAAYQ,KAAjB,gBALJ,E,qDAYf,OACA,cAACb,EAAgBc,SAAjB,CAA0BL,MAAO,CAC7BA,MAAQC,KAAKE,MAAMH,MACnBM,YAAaL,KAAKL,aAFtB,SAIMK,KAAKN,MAAMY,e,GAlBHf,IAAMgB,WAuBbd,MACf,IAAMe,EAAmBlB,EAAgBmB,U,iHC5B7B,I,sBCITC,EAAYC,gBAAK,kBAAM,gCAgBdC,MAdf,WACE,OACE,cAAC,IAAD,UACA,cAAC,IAAD,UACA,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAWN,aCAjCO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.93c415ad.chunk.js","sourcesContent":["import React from 'react';\r\nconst languageValue = localStorage.getItem('language');\r\n\r\nconst LanguageContext = React.createContext();\r\n   class Context extends React.Component {\r\n       constructor(props) {\r\n           super(props);\r\n           this.state = {\r\n               value: languageValue ? languageValue : 'en',\r\n           }\r\n           this.changeValue = this.changeValue.bind(this);\r\n       }\r\n       changeValue = function(event) {\r\n            localStorage.setItem('language', event.target.value);\r\n           this.setState({value: event.target.value});\r\n       }\r\n       render() {\r\n           return (\r\n           <LanguageContext.Provider value={{\r\n               value : this.state.value,\r\n               changeState: this.changeValue,\r\n            }}>\r\n                {this.props.children}\r\n           </LanguageContext.Provider>\r\n        );\r\n       }\r\n   }\r\n   export default Context;\r\n   const LanguageConsumer = LanguageContext.Consumer\r\n   export {LanguageConsumer};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport {Suspense, lazy} from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LanguageContext from './language-context';\nconst FirstPage = lazy(() => import('./modules/first-screen/first-page'))\n\nfunction App() {\n  return (\n    <LanguageContext>\n    <Router>\n    <Suspense fallback={<div>Loading...</div>}>\n      <Switch>\n        <Route exact path=\"/blogger\" component={FirstPage}/>\n      </Switch>\n    </Suspense>\n  </Router>\n  </LanguageContext>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}